// Code generated by protoc-gen-go. DO NOT EDIT.
// source: beeswax/logs/extension.proto

package logs

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type VideoExtensions_PlacementType int32

const (
	VideoExtensions_IN_BANNER VideoExtensions_PlacementType = 0
	VideoExtensions_IN_STREAM VideoExtensions_PlacementType = 1
)

var VideoExtensions_PlacementType_name = map[int32]string{
	0: "IN_BANNER",
	1: "IN_STREAM",
}
var VideoExtensions_PlacementType_value = map[string]int32{
	"IN_BANNER": 0,
	"IN_STREAM": 1,
}

func (x VideoExtensions_PlacementType) Enum() *VideoExtensions_PlacementType {
	p := new(VideoExtensions_PlacementType)
	*p = x
	return p
}
func (x VideoExtensions_PlacementType) String() string {
	return proto.EnumName(VideoExtensions_PlacementType_name, int32(x))
}
func (x *VideoExtensions_PlacementType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(VideoExtensions_PlacementType_value, data, "VideoExtensions_PlacementType")
	if err != nil {
		return err
	}
	*x = VideoExtensions_PlacementType(value)
	return nil
}
func (VideoExtensions_PlacementType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor5, []int{5, 0}
}

// Next available tag: 5
// Refer to the documentation of BuyerPricingRule in adx.proto
// to understand the meaning of these fields.
type AdvertiserInfo struct {
	IncludedAdvertisers []int64 `protobuf:"varint,1,rep,name=included_advertisers,json=includedAdvertisers" json:"included_advertisers,omitempty"`
	ExcludedAdvertisers []int64 `protobuf:"varint,2,rep,name=excluded_advertisers,json=excludedAdvertisers" json:"excluded_advertisers,omitempty"`
	Blocked             *bool   `protobuf:"varint,3,opt,name=blocked" json:"blocked,omitempty"`
	// CPM micros in buyer currency i.e. USD
	MinimumCpmMicros *int64 `protobuf:"varint,4,opt,name=minimum_cpm_micros,json=minimumCpmMicros" json:"minimum_cpm_micros,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AdvertiserInfo) Reset()                    { *m = AdvertiserInfo{} }
func (m *AdvertiserInfo) String() string            { return proto.CompactTextString(m) }
func (*AdvertiserInfo) ProtoMessage()               {}
func (*AdvertiserInfo) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{0} }

func (m *AdvertiserInfo) GetIncludedAdvertisers() []int64 {
	if m != nil {
		return m.IncludedAdvertisers
	}
	return nil
}

func (m *AdvertiserInfo) GetExcludedAdvertisers() []int64 {
	if m != nil {
		return m.ExcludedAdvertisers
	}
	return nil
}

func (m *AdvertiserInfo) GetBlocked() bool {
	if m != nil && m.Blocked != nil {
		return *m.Blocked
	}
	return false
}

func (m *AdvertiserInfo) GetMinimumCpmMicros() int64 {
	if m != nil && m.MinimumCpmMicros != nil {
		return *m.MinimumCpmMicros
	}
	return 0
}

// Next available tag: 3
// Used to represent <w,h> at various places in the
// extensions.
// For e.g. Additional ad sizes supported on an adslot.
type Dimension struct {
	Width            *int32 `protobuf:"varint,1,opt,name=width" json:"width,omitempty"`
	Height           *int32 `protobuf:"varint,2,opt,name=height" json:"height,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Dimension) Reset()                    { *m = Dimension{} }
func (m *Dimension) String() string            { return proto.CompactTextString(m) }
func (*Dimension) ProtoMessage()               {}
func (*Dimension) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{1} }

func (m *Dimension) GetWidth() int32 {
	if m != nil && m.Width != nil {
		return *m.Width
	}
	return 0
}

func (m *Dimension) GetHeight() int32 {
	if m != nil && m.Height != nil {
		return *m.Height
	}
	return 0
}

// Next available tag: 10
type BidRequestExtensions struct {
	InventorySource *Enums_Inventory_Source `protobuf:"varint,1,opt,name=inventory_source,json=inventorySource,enum=logs.Enums_Inventory_Source" json:"inventory_source,omitempty"`
	AuctionId       *EventId                `protobuf:"bytes,2,opt,name=auction_id,json=auctionId" json:"auction_id,omitempty"`
	// The unique identifier of the auction per buzz_key.
	// Format: <auctionid.timestamp>.<auctionid.hostid>.<auctionid.tid>.<buzz_key>
	// auction_id_str contains buzz_key so it is populated in sbs.
	AuctionidStr *string `protobuf:"bytes,8,opt,name=auctionid_str,json=auctionidStr" json:"auctionid_str,omitempty"`
	// This field is used for Geo targeting.
	// It is populated by the LocalAugmentor in Stinger.
	TargetingGeo *TargetingGeoExtension `protobuf:"bytes,3,opt,name=targeting_geo,json=targetingGeo" json:"targeting_geo,omitempty"`
	// time_of_week is a stinger calculated field used for targetting
	TimeOfWeek *int32 `protobuf:"varint,4,opt,name=time_of_week,json=timeOfWeek" json:"time_of_week,omitempty"`
	// Used to identify Stinger.
	BuzzKey *string `protobuf:"bytes,5,opt,name=buzz_key,json=buzzKey" json:"buzz_key,omitempty"`
	// This field is used by Augmentors like ManagedListAugmentor
	AugmentorData []*BidRequestExtensions_AugmentorData `protobuf:"bytes,6,rep,name=augmentor_data,json=augmentorData" json:"augmentor_data,omitempty"`
	// Exchange specific extensions
	Appnexus                     *AppNexusBidRequestExtension `protobuf:"bytes,7,opt,name=appnexus" json:"appnexus,omitempty"`
	Adx                          *AdxBidRequestExtension      `protobuf:"bytes,9,opt,name=adx" json:"adx,omitempty"`
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
}

func (m *BidRequestExtensions) Reset()                    { *m = BidRequestExtensions{} }
func (m *BidRequestExtensions) String() string            { return proto.CompactTextString(m) }
func (*BidRequestExtensions) ProtoMessage()               {}
func (*BidRequestExtensions) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{2} }

var extRange_BidRequestExtensions = []proto.ExtensionRange{
	{1000, 536870911},
}

func (*BidRequestExtensions) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_BidRequestExtensions
}

func (m *BidRequestExtensions) GetInventorySource() Enums_Inventory_Source {
	if m != nil && m.InventorySource != nil {
		return *m.InventorySource
	}
	return Enums_Inventory_UNKNOWN_SOURCE
}

func (m *BidRequestExtensions) GetAuctionId() *EventId {
	if m != nil {
		return m.AuctionId
	}
	return nil
}

func (m *BidRequestExtensions) GetAuctionidStr() string {
	if m != nil && m.AuctionidStr != nil {
		return *m.AuctionidStr
	}
	return ""
}

func (m *BidRequestExtensions) GetTargetingGeo() *TargetingGeoExtension {
	if m != nil {
		return m.TargetingGeo
	}
	return nil
}

func (m *BidRequestExtensions) GetTimeOfWeek() int32 {
	if m != nil && m.TimeOfWeek != nil {
		return *m.TimeOfWeek
	}
	return 0
}

func (m *BidRequestExtensions) GetBuzzKey() string {
	if m != nil && m.BuzzKey != nil {
		return *m.BuzzKey
	}
	return ""
}

func (m *BidRequestExtensions) GetAugmentorData() []*BidRequestExtensions_AugmentorData {
	if m != nil {
		return m.AugmentorData
	}
	return nil
}

func (m *BidRequestExtensions) GetAppnexus() *AppNexusBidRequestExtension {
	if m != nil {
		return m.Appnexus
	}
	return nil
}

func (m *BidRequestExtensions) GetAdx() *AdxBidRequestExtension {
	if m != nil {
		return m.Adx
	}
	return nil
}

// Next available tag: 3
type BidRequestExtensions_AugmentorData struct {
	// Augmentor identifier, used for targeting
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Array of Augmentor segments
	Segment          []*BidRequestExtensions_AugmentorData_Segment `protobuf:"bytes,2,rep,name=segment" json:"segment,omitempty"`
	XXX_unrecognized []byte                                        `json:"-"`
}

func (m *BidRequestExtensions_AugmentorData) Reset()         { *m = BidRequestExtensions_AugmentorData{} }
func (m *BidRequestExtensions_AugmentorData) String() string { return proto.CompactTextString(m) }
func (*BidRequestExtensions_AugmentorData) ProtoMessage()    {}
func (*BidRequestExtensions_AugmentorData) Descriptor() ([]byte, []int) {
	return fileDescriptor5, []int{2, 0}
}

func (m *BidRequestExtensions_AugmentorData) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *BidRequestExtensions_AugmentorData) GetSegment() []*BidRequestExtensions_AugmentorData_Segment {
	if m != nil {
		return m.Segment
	}
	return nil
}

// Next available tag: 3
// Segment along with augmentor's ID allows augmentor based targeting
type BidRequestExtensions_AugmentorData_Segment struct {
	// ID of a augmentorâ€™s segment
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// String representing the value of the segment.
	Value            *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BidRequestExtensions_AugmentorData_Segment) Reset() {
	*m = BidRequestExtensions_AugmentorData_Segment{}
}
func (m *BidRequestExtensions_AugmentorData_Segment) String() string {
	return proto.CompactTextString(m)
}
func (*BidRequestExtensions_AugmentorData_Segment) ProtoMessage() {}
func (*BidRequestExtensions_AugmentorData_Segment) Descriptor() ([]byte, []int) {
	return fileDescriptor5, []int{2, 0, 0}
}

func (m *BidRequestExtensions_AugmentorData_Segment) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *BidRequestExtensions_AugmentorData_Segment) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

// Next available tag: 9
type ImpressionExtensions struct {
	PlacementType   *Enums_Inventory_PlacementType   `protobuf:"varint,2,opt,name=placement_type,json=placementType,enum=logs.Enums_Inventory_PlacementType" json:"placement_type,omitempty"`
	EnvironmentType *Enums_Inventory_EnvironmentType `protobuf:"varint,3,opt,name=environment_type,json=environmentType,enum=logs.Enums_Inventory_EnvironmentType" json:"environment_type,omitempty"`
	Placements      []string                         `protobuf:"bytes,5,rep,name=placements" json:"placements,omitempty"`
	AdvertiserInfo  []*AdvertiserInfo                `protobuf:"bytes,4,rep,name=advertiser_info,json=advertiserInfo" json:"advertiser_info,omitempty"`
	Viewability     *ViewabilityExtensions           `protobuf:"bytes,8,opt,name=viewability" json:"viewability,omitempty"`
	// Seat ids that the exchange considers eligible to serve on this impression.
	// This feature is currently only supported by Adx.
	EligibleSeatIds []string `protobuf:"bytes,7,rep,name=eligible_seat_ids,json=eligibleSeatIds" json:"eligible_seat_ids,omitempty"`
	// Exchange specific extensions
	Adx *AdxImpressionExtension `protobuf:"bytes,1,opt,name=adx" json:"adx,omitempty"`
	// Deprecated field. Use ViewabilityExtensions field instead.
	ExchangePredictedViewRate    *float32 `protobuf:"fixed32,6,opt,name=exchange_predicted_view_rate,json=exchangePredictedViewRate" json:"exchange_predicted_view_rate,omitempty"`
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
}

func (m *ImpressionExtensions) Reset()                    { *m = ImpressionExtensions{} }
func (m *ImpressionExtensions) String() string            { return proto.CompactTextString(m) }
func (*ImpressionExtensions) ProtoMessage()               {}
func (*ImpressionExtensions) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{3} }

var extRange_ImpressionExtensions = []proto.ExtensionRange{
	{1000, 536870911},
}

func (*ImpressionExtensions) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_ImpressionExtensions
}

func (m *ImpressionExtensions) GetPlacementType() Enums_Inventory_PlacementType {
	if m != nil && m.PlacementType != nil {
		return *m.PlacementType
	}
	return Enums_Inventory_UNKNOWN_PLACEMENT_TYPE
}

func (m *ImpressionExtensions) GetEnvironmentType() Enums_Inventory_EnvironmentType {
	if m != nil && m.EnvironmentType != nil {
		return *m.EnvironmentType
	}
	return Enums_Inventory_UNKNOWN_ENVIRONMENT_TYPE
}

func (m *ImpressionExtensions) GetPlacements() []string {
	if m != nil {
		return m.Placements
	}
	return nil
}

func (m *ImpressionExtensions) GetAdvertiserInfo() []*AdvertiserInfo {
	if m != nil {
		return m.AdvertiserInfo
	}
	return nil
}

func (m *ImpressionExtensions) GetViewability() *ViewabilityExtensions {
	if m != nil {
		return m.Viewability
	}
	return nil
}

func (m *ImpressionExtensions) GetEligibleSeatIds() []string {
	if m != nil {
		return m.EligibleSeatIds
	}
	return nil
}

func (m *ImpressionExtensions) GetAdx() *AdxImpressionExtension {
	if m != nil {
		return m.Adx
	}
	return nil
}

func (m *ImpressionExtensions) GetExchangePredictedViewRate() float32 {
	if m != nil && m.ExchangePredictedViewRate != nil {
		return *m.ExchangePredictedViewRate
	}
	return 0
}

// Next available tag: 5
type BannerExtensions struct {
	// Blocked ApiFrameworks
	Bapis []Enums_BidRequest_Impression_ApiFramework `protobuf:"varint,1,rep,name=bapis,enum=logs.Enums_BidRequest_Impression_ApiFramework" json:"bapis,omitempty"`
	// Creative attributes that are required by the request.
	// For e.g. MoPub request have "AD_HAS_THUMBNAIL" for the creative
	//          to be returned in the response
	RequiredAttrs []CreativeAttribute `protobuf:"varint,2,rep,name=required_attrs,json=requiredAttrs,enum=logs.CreativeAttribute" json:"required_attrs,omitempty"`
	// Some exchanges such as Google Adx support multiple allowed sizes for
	// an impression.
	// In such cases, the additional dimensions (w, h) that are supported
	// are present in this field.
	// For example, if Adx supports 5 sets of allowed sizes in a request.
	// The first allowed size will be in banner.w and banner.h
	// The additional 4 sets will be in this field.
	AdditionalDimensions []*Dimension `protobuf:"bytes,3,rep,name=additional_dimensions,json=additionalDimensions" json:"additional_dimensions,omitempty"`
	// Some exchanges support "rewarded banners". This signifies that an end user
	// will recieve a reward for interacting with the ad. E.g. if the user plays
	// a game in a playable banner, they get game currency in a phone game.
	//
	// Two things to note:
	//   1. Protobufs sets bools false by default. Unless this field exists and
	//      is explicitly set to true, a banner is considered "nonrewarded".
	//   2. No exchange actually defines this field here, it is a generalization
	//      of the different ways that exchanges denote rewarded banners.
	Rewarded                     *bool `protobuf:"varint,4,opt,name=rewarded" json:"rewarded,omitempty"`
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
}

func (m *BannerExtensions) Reset()                    { *m = BannerExtensions{} }
func (m *BannerExtensions) String() string            { return proto.CompactTextString(m) }
func (*BannerExtensions) ProtoMessage()               {}
func (*BannerExtensions) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{4} }

var extRange_BannerExtensions = []proto.ExtensionRange{
	{1000, 536870911},
}

func (*BannerExtensions) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_BannerExtensions
}

func (m *BannerExtensions) GetBapis() []Enums_BidRequest_Impression_ApiFramework {
	if m != nil {
		return m.Bapis
	}
	return nil
}

func (m *BannerExtensions) GetRequiredAttrs() []CreativeAttribute {
	if m != nil {
		return m.RequiredAttrs
	}
	return nil
}

func (m *BannerExtensions) GetAdditionalDimensions() []*Dimension {
	if m != nil {
		return m.AdditionalDimensions
	}
	return nil
}

func (m *BannerExtensions) GetRewarded() bool {
	if m != nil && m.Rewarded != nil {
		return *m.Rewarded
	}
	return false
}

// Next available tag: 6
type VideoExtensions struct {
	// player_size can be one of ["S", "M"., "L", "XL", "NA"].
	// Computed by the LocalAugmentor in Stinger.
	PlayerSize *string `protobuf:"bytes,1,opt,name=player_size,json=playerSize" json:"player_size,omitempty"`
	// Creative attributes that are required by the request.
	// For e.g. Adx requests that require skippable ads are modeled
	// as having required_attr = AD_CAN_BE_SKIPPED
	RequiredAttrs []CreativeAttribute            `protobuf:"varint,2,rep,name=required_attrs,json=requiredAttrs,enum=logs.CreativeAttribute" json:"required_attrs,omitempty"`
	PlacementType *VideoExtensions_PlacementType `protobuf:"varint,3,opt,name=placement_type,json=placementType,enum=logs.VideoExtensions_PlacementType,def=1" json:"placement_type,omitempty"`
	// Number of seconds into the video ad when the skip button appears.
	// This is only applicable to skippable video ads.
	// Some inventory sources such as Google Ad Exchange do not specify
	// this skip offset explicity in the bid request.
	// For such sources, skip_offset of 5 seconds is a safe default.
	SkipOffset *int32 `protobuf:"varint,4,opt,name=skip_offset,json=skipOffset,def=5" json:"skip_offset,omitempty"`
	// Some exchanges support "rewarded videos". This signifies that an end user
	// will recieve a reward for interacting with the ad. E.g. if the user watches
	// the whole video, they get game currency in a phone game.
	//
	// Two things to note:
	//   1. Protobufs sets bools false by default. Unless this field exists and
	//      is explicitly set to true, a video is considered "nonrewarded".
	//   2. No exchange actually defines this field here, it is a generalization
	//      of the different ways that exchanges denote rewarded videos.
	Rewarded                     *bool `protobuf:"varint,5,opt,name=rewarded" json:"rewarded,omitempty"`
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
}

func (m *VideoExtensions) Reset()                    { *m = VideoExtensions{} }
func (m *VideoExtensions) String() string            { return proto.CompactTextString(m) }
func (*VideoExtensions) ProtoMessage()               {}
func (*VideoExtensions) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{5} }

var extRange_VideoExtensions = []proto.ExtensionRange{
	{1000, 536870911},
}

func (*VideoExtensions) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_VideoExtensions
}

const Default_VideoExtensions_PlacementType VideoExtensions_PlacementType = VideoExtensions_IN_STREAM
const Default_VideoExtensions_SkipOffset int32 = 5

func (m *VideoExtensions) GetPlayerSize() string {
	if m != nil && m.PlayerSize != nil {
		return *m.PlayerSize
	}
	return ""
}

func (m *VideoExtensions) GetRequiredAttrs() []CreativeAttribute {
	if m != nil {
		return m.RequiredAttrs
	}
	return nil
}

func (m *VideoExtensions) GetPlacementType() VideoExtensions_PlacementType {
	if m != nil && m.PlacementType != nil {
		return *m.PlacementType
	}
	return Default_VideoExtensions_PlacementType
}

func (m *VideoExtensions) GetSkipOffset() int32 {
	if m != nil && m.SkipOffset != nil {
		return *m.SkipOffset
	}
	return Default_VideoExtensions_SkipOffset
}

func (m *VideoExtensions) GetRewarded() bool {
	if m != nil && m.Rewarded != nil {
		return *m.Rewarded
	}
	return false
}

type NativeExtensions struct {
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
}

func (m *NativeExtensions) Reset()                    { *m = NativeExtensions{} }
func (m *NativeExtensions) String() string            { return proto.CompactTextString(m) }
func (*NativeExtensions) ProtoMessage()               {}
func (*NativeExtensions) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{6} }

var extRange_NativeExtensions = []proto.ExtensionRange{
	{1000, 536870911},
}

func (*NativeExtensions) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_NativeExtensions
}

type PMPExtensions struct {
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
}

func (m *PMPExtensions) Reset()                    { *m = PMPExtensions{} }
func (m *PMPExtensions) String() string            { return proto.CompactTextString(m) }
func (*PMPExtensions) ProtoMessage()               {}
func (*PMPExtensions) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{7} }

var extRange_PMPExtensions = []proto.ExtensionRange{
	{1000, 536870911},
}

func (*PMPExtensions) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_PMPExtensions
}

type DirectDealExtensions struct {
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
}

func (m *DirectDealExtensions) Reset()                    { *m = DirectDealExtensions{} }
func (m *DirectDealExtensions) String() string            { return proto.CompactTextString(m) }
func (*DirectDealExtensions) ProtoMessage()               {}
func (*DirectDealExtensions) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{8} }

var extRange_DirectDealExtensions = []proto.ExtensionRange{
	{1000, 536870911},
}

func (*DirectDealExtensions) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_DirectDealExtensions
}

type SiteExtensions struct {
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
}

func (m *SiteExtensions) Reset()                    { *m = SiteExtensions{} }
func (m *SiteExtensions) String() string            { return proto.CompactTextString(m) }
func (*SiteExtensions) ProtoMessage()               {}
func (*SiteExtensions) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{9} }

var extRange_SiteExtensions = []proto.ExtensionRange{
	{1000, 536870911},
}

func (*SiteExtensions) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_SiteExtensions
}

type AppExtensions struct {
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
}

func (m *AppExtensions) Reset()                    { *m = AppExtensions{} }
func (m *AppExtensions) String() string            { return proto.CompactTextString(m) }
func (*AppExtensions) ProtoMessage()               {}
func (*AppExtensions) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{10} }

var extRange_AppExtensions = []proto.ExtensionRange{
	{1000, 536870911},
}

func (*AppExtensions) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_AppExtensions
}

type ContentExtensions struct {
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
}

func (m *ContentExtensions) Reset()                    { *m = ContentExtensions{} }
func (m *ContentExtensions) String() string            { return proto.CompactTextString(m) }
func (*ContentExtensions) ProtoMessage()               {}
func (*ContentExtensions) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{11} }

var extRange_ContentExtensions = []proto.ExtensionRange{
	{1000, 536870911},
}

func (*ContentExtensions) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_ContentExtensions
}

type ProducerExtensions struct {
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
}

func (m *ProducerExtensions) Reset()                    { *m = ProducerExtensions{} }
func (m *ProducerExtensions) String() string            { return proto.CompactTextString(m) }
func (*ProducerExtensions) ProtoMessage()               {}
func (*ProducerExtensions) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{12} }

var extRange_ProducerExtensions = []proto.ExtensionRange{
	{1000, 536870911},
}

func (*ProducerExtensions) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_ProducerExtensions
}

// Next available tag: 5
// Tag 1: idfa - Deprecated. Do not resuse.
type DeviceExtensions struct {
	// Device screen size. Valid values are "S", "M", "L", "XL", and "NA"
	// Computed by the LocalAugmentor in Stinger.
	DeviceScreenSize *string `protobuf:"bytes,2,opt,name=device_screen_size,json=deviceScreenSize,def=NA" json:"device_screen_size,omitempty"`
	// Computed by the LocalAugmentor in Stinger.
	Browser *string `protobuf:"bytes,3,opt,name=browser,def=-1" json:"browser,omitempty"`
	// Computed by the LocalAugmentor in Stinger.
	BrowserVersion               *string `protobuf:"bytes,4,opt,name=browser_version,json=browserVersion,def=-1" json:"browser_version,omitempty"`
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
}

func (m *DeviceExtensions) Reset()                    { *m = DeviceExtensions{} }
func (m *DeviceExtensions) String() string            { return proto.CompactTextString(m) }
func (*DeviceExtensions) ProtoMessage()               {}
func (*DeviceExtensions) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{13} }

var extRange_DeviceExtensions = []proto.ExtensionRange{
	{1000, 536870911},
}

func (*DeviceExtensions) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_DeviceExtensions
}

const Default_DeviceExtensions_DeviceScreenSize string = "NA"
const Default_DeviceExtensions_Browser string = "-1"
const Default_DeviceExtensions_BrowserVersion string = "-1"

func (m *DeviceExtensions) GetDeviceScreenSize() string {
	if m != nil && m.DeviceScreenSize != nil {
		return *m.DeviceScreenSize
	}
	return Default_DeviceExtensions_DeviceScreenSize
}

func (m *DeviceExtensions) GetBrowser() string {
	if m != nil && m.Browser != nil {
		return *m.Browser
	}
	return Default_DeviceExtensions_Browser
}

func (m *DeviceExtensions) GetBrowserVersion() string {
	if m != nil && m.BrowserVersion != nil {
		return *m.BrowserVersion
	}
	return Default_DeviceExtensions_BrowserVersion
}

// Next available tag: 3
type UserExtensions struct {
	// This field identifies the user of the bid request. It will be used
	// for user segment lookup and frequency cap.
	// For WEB request, its value is bito_id (user.id).
	// For APP request, its value is the first field which has value
	// in the following order:
	// device.ifa -> device.dpidsha1 -> device.dpidmd5
	// And the value is prefixed with the names in Enum.Bidrequest.User.UserIdType
	// (Except bito_id - we still use bito as prefix)
	UserId                       *string                           `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	UserIdType                   *Enums_BidRequest_User_UserIdType `protobuf:"varint,2,opt,name=user_id_type,json=userIdType,enum=logs.Enums_BidRequest_User_UserIdType" json:"user_id_type,omitempty"`
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
}

func (m *UserExtensions) Reset()                    { *m = UserExtensions{} }
func (m *UserExtensions) String() string            { return proto.CompactTextString(m) }
func (*UserExtensions) ProtoMessage()               {}
func (*UserExtensions) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{14} }

var extRange_UserExtensions = []proto.ExtensionRange{
	{1000, 536870911},
}

func (*UserExtensions) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_UserExtensions
}

func (m *UserExtensions) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *UserExtensions) GetUserIdType() Enums_BidRequest_User_UserIdType {
	if m != nil && m.UserIdType != nil {
		return *m.UserIdType
	}
	return Enums_BidRequest_User_UNKNOWN
}

type PublisherExtensions struct {
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
}

func (m *PublisherExtensions) Reset()                    { *m = PublisherExtensions{} }
func (m *PublisherExtensions) String() string            { return proto.CompactTextString(m) }
func (*PublisherExtensions) ProtoMessage()               {}
func (*PublisherExtensions) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{15} }

var extRange_PublisherExtensions = []proto.ExtensionRange{
	{1000, 536870911},
}

func (*PublisherExtensions) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_PublisherExtensions
}

// Next available tag: 2
type GeoExtensions struct {
	Adx                          *AdxGeoExtension `protobuf:"bytes,1,opt,name=adx" json:"adx,omitempty"`
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
}

func (m *GeoExtensions) Reset()                    { *m = GeoExtensions{} }
func (m *GeoExtensions) String() string            { return proto.CompactTextString(m) }
func (*GeoExtensions) ProtoMessage()               {}
func (*GeoExtensions) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{16} }

var extRange_GeoExtensions = []proto.ExtensionRange{
	{1000, 536870911},
}

func (*GeoExtensions) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_GeoExtensions
}

func (m *GeoExtensions) GetAdx() *AdxGeoExtension {
	if m != nil {
		return m.Adx
	}
	return nil
}

// Next available tag: 2
type DataExtensions struct {
	BeeswaxAugmented             *bool `protobuf:"varint,1,opt,name=beeswax_augmented,json=beeswaxAugmented,def=0" json:"beeswax_augmented,omitempty"`
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
}

func (m *DataExtensions) Reset()                    { *m = DataExtensions{} }
func (m *DataExtensions) String() string            { return proto.CompactTextString(m) }
func (*DataExtensions) ProtoMessage()               {}
func (*DataExtensions) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{17} }

var extRange_DataExtensions = []proto.ExtensionRange{
	{1000, 536870911},
}

func (*DataExtensions) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_DataExtensions
}

const Default_DataExtensions_BeeswaxAugmented bool = false

func (m *DataExtensions) GetBeeswaxAugmented() bool {
	if m != nil && m.BeeswaxAugmented != nil {
		return *m.BeeswaxAugmented
	}
	return Default_DataExtensions_BeeswaxAugmented
}

type SegmentExtensions struct {
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
}

func (m *SegmentExtensions) Reset()                    { *m = SegmentExtensions{} }
func (m *SegmentExtensions) String() string            { return proto.CompactTextString(m) }
func (*SegmentExtensions) ProtoMessage()               {}
func (*SegmentExtensions) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{18} }

var extRange_SegmentExtensions = []proto.ExtensionRange{
	{1000, 536870911},
}

func (*SegmentExtensions) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_SegmentExtensions
}

type RegulationsExtensions struct {
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
}

func (m *RegulationsExtensions) Reset()                    { *m = RegulationsExtensions{} }
func (m *RegulationsExtensions) String() string            { return proto.CompactTextString(m) }
func (*RegulationsExtensions) ProtoMessage()               {}
func (*RegulationsExtensions) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{19} }

var extRange_RegulationsExtensions = []proto.ExtensionRange{
	{1000, 536870911},
}

func (*RegulationsExtensions) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_RegulationsExtensions
}

type BidResponseExtensions struct {
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
}

func (m *BidResponseExtensions) Reset()                    { *m = BidResponseExtensions{} }
func (m *BidResponseExtensions) String() string            { return proto.CompactTextString(m) }
func (*BidResponseExtensions) ProtoMessage()               {}
func (*BidResponseExtensions) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{20} }

var extRange_BidResponseExtensions = []proto.ExtensionRange{
	{1000, 536870911},
}

func (*BidResponseExtensions) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_BidResponseExtensions
}

type SeatBidExtensions struct {
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
}

func (m *SeatBidExtensions) Reset()                    { *m = SeatBidExtensions{} }
func (m *SeatBidExtensions) String() string            { return proto.CompactTextString(m) }
func (*SeatBidExtensions) ProtoMessage()               {}
func (*SeatBidExtensions) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{21} }

var extRange_SeatBidExtensions = []proto.ExtensionRange{
	{1000, 536870911},
}

func (*SeatBidExtensions) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_SeatBidExtensions
}

// Next available tag: 11
type BidExtensions struct {
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
}

func (m *BidExtensions) Reset()                    { *m = BidExtensions{} }
func (m *BidExtensions) String() string            { return proto.CompactTextString(m) }
func (*BidExtensions) ProtoMessage()               {}
func (*BidExtensions) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{22} }

var extRange_BidExtensions = []proto.ExtensionRange{
	{1000, 536870911},
}

func (*BidExtensions) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_BidExtensions
}

// This field is used for Geo targeting.
// It is populated by the LocalAugmentor in Stinger.
type TargetingGeoExtension struct {
	// Country using ISO-3166-1 Alpha-3.
	Country *string `protobuf:"bytes,1,opt,name=country,def=000" json:"country,omitempty"`
	// Region using ISO 3166-2
	Region *string `protobuf:"bytes,2,opt,name=region,def=000/00" json:"region,omitempty"`
	// City using United Nations Code for Trade and Transport Locations
	// (http://www.unece.org/cefact/locode/service/location.htm).
	City *string `protobuf:"bytes,3,opt,name=city,def=-1" json:"city,omitempty"`
	// Zip/postal code.
	Zip              *string                            `protobuf:"bytes,4,opt,name=zip,def=-1" json:"zip,omitempty"`
	Metro            *string                            `protobuf:"bytes,5,opt,name=metro,def=000" json:"metro,omitempty"`
	LatLongPresent   *bool                              `protobuf:"varint,6,opt,name=lat_long_present,json=latLongPresent,def=0" json:"lat_long_present,omitempty"`
	Lat              *float64                           `protobuf:"fixed64,7,opt,name=lat" json:"lat,omitempty"`
	Lon              *float64                           `protobuf:"fixed64,8,opt,name=lon" json:"lon,omitempty"`
	Type             *Enums_BidRequest_Geo_LocationType `protobuf:"varint,9,opt,name=type,enum=logs.Enums_BidRequest_Geo_LocationType" json:"type,omitempty"`
	XXX_unrecognized []byte                             `json:"-"`
}

func (m *TargetingGeoExtension) Reset()                    { *m = TargetingGeoExtension{} }
func (m *TargetingGeoExtension) String() string            { return proto.CompactTextString(m) }
func (*TargetingGeoExtension) ProtoMessage()               {}
func (*TargetingGeoExtension) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{23} }

const Default_TargetingGeoExtension_Country string = "000"
const Default_TargetingGeoExtension_Region string = "000/00"
const Default_TargetingGeoExtension_City string = "-1"
const Default_TargetingGeoExtension_Zip string = "-1"
const Default_TargetingGeoExtension_Metro string = "000"
const Default_TargetingGeoExtension_LatLongPresent bool = false

func (m *TargetingGeoExtension) GetCountry() string {
	if m != nil && m.Country != nil {
		return *m.Country
	}
	return Default_TargetingGeoExtension_Country
}

func (m *TargetingGeoExtension) GetRegion() string {
	if m != nil && m.Region != nil {
		return *m.Region
	}
	return Default_TargetingGeoExtension_Region
}

func (m *TargetingGeoExtension) GetCity() string {
	if m != nil && m.City != nil {
		return *m.City
	}
	return Default_TargetingGeoExtension_City
}

func (m *TargetingGeoExtension) GetZip() string {
	if m != nil && m.Zip != nil {
		return *m.Zip
	}
	return Default_TargetingGeoExtension_Zip
}

func (m *TargetingGeoExtension) GetMetro() string {
	if m != nil && m.Metro != nil {
		return *m.Metro
	}
	return Default_TargetingGeoExtension_Metro
}

func (m *TargetingGeoExtension) GetLatLongPresent() bool {
	if m != nil && m.LatLongPresent != nil {
		return *m.LatLongPresent
	}
	return Default_TargetingGeoExtension_LatLongPresent
}

func (m *TargetingGeoExtension) GetLat() float64 {
	if m != nil && m.Lat != nil {
		return *m.Lat
	}
	return 0
}

func (m *TargetingGeoExtension) GetLon() float64 {
	if m != nil && m.Lon != nil {
		return *m.Lon
	}
	return 0
}

func (m *TargetingGeoExtension) GetType() Enums_BidRequest_Geo_LocationType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Enums_BidRequest_Geo_GPS_LOCATION
}

// Viewability.predicted_viewability is populated by FES LocalAugmentor
// and used for targeting in Matcher
type ViewabilityExtensions struct {
	// Specifies the predicted viewability from Beeswax ViewabilityPredictor
	PredictedViewability *float32 `protobuf:"fixed32,1,opt,name=predicted_viewability,json=predictedViewability" json:"predicted_viewability,omitempty"`
	// Specifies the probability that the impression will be viewable by the user,
	// based on historical data.
	// Currently populated for AppNexus and AdX only
	ExchangePredictedViewRate *float32 `protobuf:"fixed32,2,opt,name=exchange_predicted_view_rate,json=exchangePredictedViewRate" json:"exchange_predicted_view_rate,omitempty"`
	XXX_unrecognized          []byte   `json:"-"`
}

func (m *ViewabilityExtensions) Reset()                    { *m = ViewabilityExtensions{} }
func (m *ViewabilityExtensions) String() string            { return proto.CompactTextString(m) }
func (*ViewabilityExtensions) ProtoMessage()               {}
func (*ViewabilityExtensions) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{24} }

func (m *ViewabilityExtensions) GetPredictedViewability() float32 {
	if m != nil && m.PredictedViewability != nil {
		return *m.PredictedViewability
	}
	return 0
}

func (m *ViewabilityExtensions) GetExchangePredictedViewRate() float32 {
	if m != nil && m.ExchangePredictedViewRate != nil {
		return *m.ExchangePredictedViewRate
	}
	return 0
}

// Exchange specific extensions.
// Next available tag: 3
type AdxBidRequestExtension struct {
	IsPredictedToBeIgnored *bool `protobuf:"varint,1,opt,name=is_predicted_to_be_ignored,json=isPredictedToBeIgnored" json:"is_predicted_to_be_ignored,omitempty"`
	// The offset of the user's time from GMT in minutes.
	// For example, GMT-5 is timezone_offset = -300.
	TimezoneOffset   *int32 `protobuf:"varint,2,opt,name=timezone_offset,json=timezoneOffset" json:"timezone_offset,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AdxBidRequestExtension) Reset()                    { *m = AdxBidRequestExtension{} }
func (m *AdxBidRequestExtension) String() string            { return proto.CompactTextString(m) }
func (*AdxBidRequestExtension) ProtoMessage()               {}
func (*AdxBidRequestExtension) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{25} }

func (m *AdxBidRequestExtension) GetIsPredictedToBeIgnored() bool {
	if m != nil && m.IsPredictedToBeIgnored != nil {
		return *m.IsPredictedToBeIgnored
	}
	return false
}

func (m *AdxBidRequestExtension) GetTimezoneOffset() int32 {
	if m != nil && m.TimezoneOffset != nil {
		return *m.TimezoneOffset
	}
	return 0
}

type AdxImpressionExtension struct {
	AdslotId         *int32 `protobuf:"varint,1,opt,name=adslot_id,json=adslotId" json:"adslot_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AdxImpressionExtension) Reset()                    { *m = AdxImpressionExtension{} }
func (m *AdxImpressionExtension) String() string            { return proto.CompactTextString(m) }
func (*AdxImpressionExtension) ProtoMessage()               {}
func (*AdxImpressionExtension) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{26} }

func (m *AdxImpressionExtension) GetAdslotId() int32 {
	if m != nil && m.AdslotId != nil {
		return *m.AdslotId
	}
	return 0
}

type AdxGeoExtension struct {
	DmaRegionCode *int32 `protobuf:"varint,1,opt,name=dma_region_code,json=dmaRegionCode" json:"dma_region_code,omitempty"`
	// Use fes.exchange.adx.AdxBidRequest.HyperlocalSet to parse.
	HyperlocalSet    []byte `protobuf:"bytes,2,opt,name=hyperlocal_set,json=hyperlocalSet" json:"hyperlocal_set,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AdxGeoExtension) Reset()                    { *m = AdxGeoExtension{} }
func (m *AdxGeoExtension) String() string            { return proto.CompactTextString(m) }
func (*AdxGeoExtension) ProtoMessage()               {}
func (*AdxGeoExtension) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{27} }

func (m *AdxGeoExtension) GetDmaRegionCode() int32 {
	if m != nil && m.DmaRegionCode != nil {
		return *m.DmaRegionCode
	}
	return 0
}

func (m *AdxGeoExtension) GetHyperlocalSet() []byte {
	if m != nil {
		return m.HyperlocalSet
	}
	return nil
}

// 2. AppNexus Exchange
// Next available tag: 2
type AppNexusBidRequestExtension struct {
	// Specifies the ID of the member selling the inventory.
	SellerMemberId   *int32 `protobuf:"varint,1,opt,name=seller_member_id,json=sellerMemberId" json:"seller_member_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AppNexusBidRequestExtension) Reset()                    { *m = AppNexusBidRequestExtension{} }
func (m *AppNexusBidRequestExtension) String() string            { return proto.CompactTextString(m) }
func (*AppNexusBidRequestExtension) ProtoMessage()               {}
func (*AppNexusBidRequestExtension) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{28} }

func (m *AppNexusBidRequestExtension) GetSellerMemberId() int32 {
	if m != nil && m.SellerMemberId != nil {
		return *m.SellerMemberId
	}
	return 0
}

func init() {
	proto.RegisterType((*AdvertiserInfo)(nil), "logs.AdvertiserInfo")
	proto.RegisterType((*Dimension)(nil), "logs.Dimension")
	proto.RegisterType((*BidRequestExtensions)(nil), "logs.BidRequestExtensions")
	proto.RegisterType((*BidRequestExtensions_AugmentorData)(nil), "logs.BidRequestExtensions.AugmentorData")
	proto.RegisterType((*BidRequestExtensions_AugmentorData_Segment)(nil), "logs.BidRequestExtensions.AugmentorData.Segment")
	proto.RegisterType((*ImpressionExtensions)(nil), "logs.ImpressionExtensions")
	proto.RegisterType((*BannerExtensions)(nil), "logs.BannerExtensions")
	proto.RegisterType((*VideoExtensions)(nil), "logs.VideoExtensions")
	proto.RegisterType((*NativeExtensions)(nil), "logs.NativeExtensions")
	proto.RegisterType((*PMPExtensions)(nil), "logs.PMPExtensions")
	proto.RegisterType((*DirectDealExtensions)(nil), "logs.DirectDealExtensions")
	proto.RegisterType((*SiteExtensions)(nil), "logs.SiteExtensions")
	proto.RegisterType((*AppExtensions)(nil), "logs.AppExtensions")
	proto.RegisterType((*ContentExtensions)(nil), "logs.ContentExtensions")
	proto.RegisterType((*ProducerExtensions)(nil), "logs.ProducerExtensions")
	proto.RegisterType((*DeviceExtensions)(nil), "logs.DeviceExtensions")
	proto.RegisterType((*UserExtensions)(nil), "logs.UserExtensions")
	proto.RegisterType((*PublisherExtensions)(nil), "logs.PublisherExtensions")
	proto.RegisterType((*GeoExtensions)(nil), "logs.GeoExtensions")
	proto.RegisterType((*DataExtensions)(nil), "logs.DataExtensions")
	proto.RegisterType((*SegmentExtensions)(nil), "logs.SegmentExtensions")
	proto.RegisterType((*RegulationsExtensions)(nil), "logs.RegulationsExtensions")
	proto.RegisterType((*BidResponseExtensions)(nil), "logs.BidResponseExtensions")
	proto.RegisterType((*SeatBidExtensions)(nil), "logs.SeatBidExtensions")
	proto.RegisterType((*BidExtensions)(nil), "logs.BidExtensions")
	proto.RegisterType((*TargetingGeoExtension)(nil), "logs.TargetingGeoExtension")
	proto.RegisterType((*ViewabilityExtensions)(nil), "logs.ViewabilityExtensions")
	proto.RegisterType((*AdxBidRequestExtension)(nil), "logs.AdxBidRequestExtension")
	proto.RegisterType((*AdxImpressionExtension)(nil), "logs.AdxImpressionExtension")
	proto.RegisterType((*AdxGeoExtension)(nil), "logs.AdxGeoExtension")
	proto.RegisterType((*AppNexusBidRequestExtension)(nil), "logs.AppNexusBidRequestExtension")
	proto.RegisterEnum("logs.VideoExtensions_PlacementType", VideoExtensions_PlacementType_name, VideoExtensions_PlacementType_value)
}

func init() { proto.RegisterFile("beeswax/logs/extension.proto", fileDescriptor5) }

var fileDescriptor5 = []byte{
	// 1644 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xa4, 0x57, 0xdd, 0x72, 0x23, 0x47,
	0x15, 0x46, 0x92, 0x65, 0x5b, 0xc7, 0xd6, 0x4f, 0x7a, 0xe5, 0x8d, 0xd6, 0xbb, 0xd9, 0x68, 0x95,
	0x4a, 0x56, 0x15, 0x12, 0x59, 0x31, 0x95, 0x0b, 0x4c, 0x2d, 0x20, 0xff, 0x60, 0x14, 0xb2, 0x5e,
	0x57, 0x7b, 0xb3, 0x5c, 0x0e, 0xad, 0xe9, 0x63, 0xb9, 0xcb, 0x33, 0xd3, 0x93, 0xee, 0x1e, 0xff,
	0x55, 0x41, 0xed, 0x0d, 0x97, 0xbc, 0x00, 0xf0, 0x12, 0xbc, 0x00, 0x37, 0xbc, 0x0c, 0x4f, 0x41,
	0x51, 0xdd, 0x33, 0x23, 0x8d, 0x1c, 0x19, 0xa8, 0xe2, 0x46, 0x35, 0xe7, 0x3b, 0x7f, 0xdd, 0xa7,
	0xbf, 0x3e, 0xa7, 0x05, 0xcf, 0x26, 0x88, 0xfa, 0x9a, 0xdd, 0xec, 0x04, 0x72, 0xaa, 0x77, 0xf0,
	0xc6, 0x60, 0xa4, 0x85, 0x8c, 0x06, 0xb1, 0x92, 0x46, 0x92, 0x15, 0x8b, 0x6e, 0x6f, 0x2f, 0xda,
	0x5c, 0x61, 0x64, 0x04, 0x4f, 0x2d, 0xb6, 0x5f, 0x2c, 0xe8, 0x64, 0x8c, 0x91, 0x32, 0x13, 0xcf,
	0x97, 0x61, 0x98, 0x07, 0xe9, 0xfd, 0xbd, 0x04, 0x8d, 0x11, 0xbf, 0x42, 0x65, 0x84, 0x46, 0x35,
	0x8e, 0xce, 0x25, 0xf9, 0x0a, 0xda, 0x22, 0xf2, 0x83, 0x84, 0x23, 0xf7, 0xd8, 0x4c, 0xa5, 0x3b,
	0xa5, 0x6e, 0xa5, 0x5f, 0xa1, 0x8f, 0x72, 0xdd, 0xdc, 0x4b, 0x5b, 0x17, 0xbc, 0x59, 0xe2, 0x52,
	0x4e, 0x5d, 0x72, 0x5d, 0xd1, 0xa5, 0x03, 0x6b, 0x93, 0x40, 0xfa, 0x97, 0xc8, 0x3b, 0x95, 0x6e,
	0xa9, 0xbf, 0x4e, 0x73, 0x91, 0x7c, 0x01, 0x24, 0x14, 0x91, 0x08, 0x93, 0xd0, 0xf3, 0xe3, 0xd0,
	0x0b, 0x85, 0xaf, 0xa4, 0xee, 0xac, 0x74, 0x4b, 0xfd, 0x0a, 0x6d, 0x65, 0x9a, 0x83, 0x38, 0x7c,
	0xed, 0xf0, 0xde, 0x4f, 0xa1, 0x76, 0x28, 0xc2, 0xb4, 0x30, 0xa4, 0x0d, 0xd5, 0x6b, 0xc1, 0xcd,
	0x45, 0xa7, 0xd4, 0x2d, 0xf5, 0xab, 0x34, 0x15, 0xc8, 0x63, 0x58, 0xbd, 0x40, 0x31, 0xbd, 0x30,
	0x9d, 0xb2, 0x83, 0x33, 0xa9, 0xf7, 0x97, 0x2a, 0xb4, 0xf7, 0x05, 0xa7, 0xf8, 0x7d, 0x82, 0xda,
	0x1c, 0xe5, 0xe5, 0xd5, 0xe4, 0x18, 0x5a, 0x22, 0xb2, 0x95, 0x94, 0xea, 0xd6, 0xd3, 0x32, 0x51,
	0x3e, 0xba, 0x88, 0x8d, 0xdd, 0x67, 0x03, 0x5b, 0xca, 0xc1, 0x51, 0x94, 0x84, 0x7a, 0x30, 0xce,
	0x6d, 0x06, 0x67, 0xce, 0x86, 0x36, 0x67, 0x5e, 0x29, 0x40, 0xbe, 0x00, 0x60, 0x89, 0x6f, 0x84,
	0x8c, 0x3c, 0xc1, 0x5d, 0xf6, 0x8d, 0xdd, 0x7a, 0x16, 0xc2, 0x5a, 0x8e, 0x39, 0xad, 0x65, 0x06,
	0x63, 0x4e, 0x3e, 0x81, 0x7a, 0x26, 0x08, 0xee, 0x69, 0xa3, 0x3a, 0xeb, 0xdd, 0x52, 0xbf, 0x46,
	0x37, 0x67, 0xe0, 0x99, 0x51, 0xe4, 0x97, 0x50, 0x37, 0x4c, 0x4d, 0xd1, 0x88, 0x68, 0xea, 0x4d,
	0x51, 0xba, 0xea, 0x6d, 0xec, 0x3e, 0x4d, 0xa3, 0xbe, 0xcd, 0x55, 0xc7, 0x28, 0x67, 0x1b, 0xa2,
	0x9b, 0xa6, 0x00, 0x93, 0x2e, 0x6c, 0x1a, 0x11, 0xa2, 0x27, 0xcf, 0xbd, 0x6b, 0xc4, 0x4b, 0x57,
	0xd9, 0x2a, 0x05, 0x8b, 0xbd, 0x39, 0xff, 0x2d, 0xe2, 0x25, 0x79, 0x02, 0xeb, 0x93, 0xe4, 0xee,
	0xce, 0xbb, 0xc4, 0xdb, 0x4e, 0xd5, 0xad, 0x61, 0xcd, 0xca, 0xbf, 0xc1, 0x5b, 0xf2, 0x06, 0x1a,
	0x2c, 0x99, 0x86, 0x6e, 0x97, 0x1e, 0x67, 0x86, 0x75, 0x56, 0xbb, 0x95, 0xfe, 0xc6, 0x6e, 0x3f,
	0xcd, 0xbf, 0xac, 0x9c, 0x83, 0x51, 0xee, 0x70, 0xc8, 0x0c, 0xa3, 0x75, 0x56, 0x14, 0xc9, 0x2b,
	0x58, 0x67, 0x71, 0x1c, 0xe1, 0x4d, 0xa2, 0x3b, 0x6b, 0x6e, 0x2b, 0x2f, 0xd2, 0x50, 0xa3, 0x38,
	0x3e, 0xb1, 0xe8, 0x92, 0x90, 0x74, 0xe6, 0x42, 0x06, 0x50, 0x61, 0xfc, 0xa6, 0x53, 0x73, 0x9e,
	0xd9, 0xe9, 0x8c, 0xf8, 0xcd, 0x32, 0x27, 0x6b, 0xb8, 0xfd, 0xd7, 0x12, 0xd4, 0x17, 0xd6, 0x43,
	0x1a, 0x50, 0x16, 0xdc, 0x1d, 0x6f, 0x8d, 0x96, 0x05, 0x27, 0xdf, 0xc0, 0x9a, 0x46, 0x67, 0xe0,
	0xe8, 0xbb, 0xb1, 0x3b, 0xfc, 0x5f, 0xb7, 0x36, 0x38, 0x4b, 0xfd, 0x68, 0x1e, 0x60, 0x7b, 0x07,
	0xd6, 0x32, 0xec, 0x07, 0x69, 0xda, 0x50, 0xbd, 0x62, 0x41, 0x82, 0x8e, 0x15, 0x35, 0x9a, 0x0a,
	0x9f, 0xd7, 0xd6, 0xff, 0xb9, 0xd6, 0x7a, 0xff, 0xfe, 0xfd, 0xfb, 0x72, 0xef, 0x5f, 0x15, 0x68,
	0x8f, 0xc3, 0x58, 0xa1, 0xb6, 0xa9, 0x0a, 0xec, 0xfc, 0x06, 0x1a, 0x71, 0xc0, 0x7c, 0xb4, 0x61,
	0x3d, 0x73, 0x1b, 0xa7, 0x21, 0x1a, 0xbb, 0x9f, 0x2c, 0xe7, 0xe6, 0x69, 0x6e, 0xfb, 0xf6, 0x36,
	0x46, 0x5a, 0x8f, 0x8b, 0x22, 0x39, 0x85, 0x16, 0x46, 0x57, 0x42, 0xc9, 0x68, 0x1e, 0xad, 0xe2,
	0xa2, 0x7d, 0xba, 0x3c, 0xda, 0xd1, 0xdc, 0xda, 0xc5, 0x6b, 0xe2, 0x22, 0x40, 0x9e, 0x03, 0xcc,
	0x52, 0xe8, 0x4e, 0xb5, 0x5b, 0xe9, 0xd7, 0x68, 0x01, 0x21, 0xaf, 0xa0, 0x39, 0xef, 0x10, 0x9e,
	0x88, 0xce, 0x65, 0x67, 0xc5, 0x95, 0xb9, 0x9d, 0x1f, 0x5e, 0xb1, 0x19, 0xd1, 0x06, 0x5b, 0x6c,
	0x4e, 0xaf, 0x60, 0xe3, 0x4a, 0xe0, 0x35, 0x9b, 0x88, 0x40, 0x98, 0x5b, 0x77, 0x43, 0x66, 0xe4,
	0x7f, 0x37, 0x57, 0xcc, 0xcb, 0x45, 0x8b, 0xf6, 0xe4, 0x73, 0xf8, 0x00, 0x03, 0x31, 0x15, 0x93,
	0x00, 0x3d, 0x8d, 0xcc, 0x78, 0x82, 0x5b, 0xda, 0xd9, 0x45, 0x36, 0x73, 0xc5, 0x19, 0x32, 0x33,
	0xe6, 0x33, 0x6a, 0x95, 0xee, 0x51, 0x6b, 0xc9, 0x99, 0x38, 0x6a, 0x91, 0x03, 0x78, 0x86, 0x37,
	0xfe, 0x05, 0x8b, 0xa6, 0xe8, 0xc5, 0x0a, 0xb9, 0xf0, 0x0d, 0x72, 0xcf, 0x66, 0xf7, 0x14, 0x33,
	0xd8, 0x59, 0xed, 0x96, 0xfa, 0xe5, 0xfd, 0x72, 0xa7, 0x44, 0x9f, 0xe4, 0x76, 0xa7, 0xb9, 0x99,
	0x5d, 0x3a, 0x65, 0x66, 0x81, 0x00, 0x7f, 0x2c, 0x43, 0x6b, 0x9f, 0x45, 0x11, 0xaa, 0xc2, 0xe1,
	0x1f, 0x42, 0x75, 0xc2, 0x62, 0x91, 0x76, 0xe3, 0xc6, 0xee, 0xa0, 0x78, 0x4a, 0x73, 0x86, 0x0e,
	0xe6, 0x8b, 0x1c, 0x8c, 0x62, 0xf1, 0x2b, 0xc5, 0x42, 0xbc, 0x96, 0xea, 0x92, 0xa6, 0xce, 0xe4,
	0xe7, 0xd0, 0x50, 0xf8, 0x7d, 0x22, 0x94, 0xed, 0xd7, 0xc6, 0x64, 0x9d, 0xba, 0xb1, 0xfb, 0x61,
	0x1a, 0xee, 0x40, 0x21, 0x33, 0xe2, 0x0a, 0x47, 0xc6, 0x28, 0x31, 0x49, 0x0c, 0xd2, 0x7a, 0x6e,
	0x6e, 0x21, 0xbb, 0x8a, 0x2d, 0xc6, 0xb9, 0xb0, 0x5d, 0x89, 0x05, 0x1e, 0xcf, 0xfb, 0xaf, 0xee,
	0x54, 0xdc, 0x51, 0x36, 0xd3, 0x30, 0xb3, 0xbe, 0x4c, 0xdb, 0x73, 0xeb, 0x19, 0xa8, 0xc9, 0x36,
	0xac, 0x2b, 0xbc, 0x66, 0x8a, 0x23, 0x77, 0x4d, 0x68, 0x9d, 0xce, 0xe4, 0x62, 0x1d, 0xfe, 0x51,
	0x86, 0xe6, 0x3b, 0xc1, 0x0b, 0x0d, 0x4d, 0x93, 0x8f, 0x61, 0x23, 0x0e, 0xd8, 0x2d, 0x2a, 0x4f,
	0x8b, 0x3b, 0xcc, 0xae, 0x15, 0xa4, 0xd0, 0x99, 0xb8, 0xc3, 0xff, 0x7b, 0x87, 0xdf, 0xfd, 0xe0,
	0x92, 0x55, 0x8a, 0x97, 0xec, 0xde, 0x7a, 0x16, 0x2f, 0xd9, 0x5e, 0x6d, 0x7c, 0xe2, 0x9d, 0xbd,
	0xa5, 0x47, 0xa3, 0xd7, 0xf7, 0xef, 0x5b, 0x0f, 0x36, 0xf4, 0xa5, 0x88, 0x3d, 0x79, 0x7e, 0xae,
	0xd1, 0xa4, 0xad, 0x77, 0xaf, 0xf4, 0x35, 0x05, 0x8b, 0xbe, 0x71, 0xe0, 0x42, 0x59, 0xaa, 0x8b,
	0x65, 0xe9, 0x7d, 0x09, 0xf5, 0x85, 0x54, 0xa4, 0x0e, 0x36, 0xd9, 0xfe, 0xe8, 0xe4, 0xe4, 0x88,
	0xb6, 0x7e, 0x94, 0x89, 0x69, 0xee, 0x56, 0xa9, 0x58, 0xc5, 0x8f, 0xa0, 0x75, 0xe2, 0xb6, 0x3c,
	0x5f, 0x75, 0x51, 0xbd, 0x0d, 0xf5, 0xd3, 0xd7, 0xa7, 0xcb, 0x75, 0x2f, 0xa0, 0x7d, 0x28, 0x14,
	0xfa, 0xe6, 0x10, 0x59, 0xb0, 0xdc, 0xe4, 0x29, 0x34, 0xce, 0x84, 0x79, 0x38, 0xf6, 0x28, 0x8e,
	0x97, 0xeb, 0x9e, 0xc3, 0x07, 0x07, 0x32, 0x32, 0x18, 0x99, 0xe5, 0xfa, 0x8f, 0x81, 0x9c, 0x2a,
	0xc9, 0x13, 0xbf, 0x78, 0x0b, 0x8a, 0x06, 0x7f, 0x2e, 0x41, 0xeb, 0x10, 0xaf, 0x84, 0x5f, 0x48,
	0x4e, 0x86, 0x40, 0xb8, 0xc3, 0x3c, 0xed, 0x2b, 0xc4, 0x28, 0x65, 0x89, 0xeb, 0xb4, 0x7b, 0xe5,
	0x93, 0x11, 0x6d, 0xa5, 0xda, 0x33, 0xa7, 0x74, 0x7c, 0x79, 0x06, 0x6b, 0x13, 0x25, 0xaf, 0x35,
	0x2a, 0x77, 0xd0, 0xb5, 0xbd, 0xf2, 0x97, 0x5f, 0xd1, 0x1c, 0x22, 0x3f, 0x86, 0x66, 0xf6, 0xe9,
	0x5d, 0xa1, 0xb2, 0x39, 0xdc, 0xd1, 0xa5, 0x56, 0x8d, 0x4c, 0xf5, 0x2e, 0xd5, 0x14, 0x17, 0xf7,
	0x07, 0x68, 0x7c, 0xa7, 0x17, 0xee, 0xef, 0x87, 0xb0, 0x96, 0xb8, 0xc6, 0x97, 0xcf, 0x82, 0x55,
	0x2b, 0x8e, 0x39, 0xf9, 0x35, 0x6c, 0x66, 0x8a, 0x62, 0x4f, 0xff, 0xec, 0x81, 0xfb, 0x6d, 0xa3,
	0xba, 0x9f, 0x31, 0x77, 0x6d, 0x18, 0x92, 0xd9, 0x77, 0x31, 0x7f, 0x17, 0x1e, 0x9d, 0x26, 0x93,
	0x40, 0xe8, 0x8b, 0x87, 0xca, 0x77, 0x00, 0xf5, 0xe3, 0x85, 0x9b, 0xf5, 0xb2, 0xd8, 0xf5, 0xb6,
	0x66, 0x5d, 0x6f, 0xe1, 0x3d, 0x61, 0x2d, 0x8a, 0x41, 0xde, 0x40, 0xc3, 0xce, 0xbf, 0x42, 0x94,
	0x5d, 0xf8, 0x20, 0x7b, 0x7b, 0x7a, 0xd9, 0xb8, 0xc7, 0x74, 0xc3, 0xeb, 0x7b, 0xd5, 0x73, 0x16,
	0x68, 0xa4, 0xad, 0x4c, 0x3f, 0xca, 0xd5, 0xf7, 0x58, 0x91, 0xcd, 0xcd, 0xe5, 0xab, 0xee, 0xc1,
	0x16, 0xc5, 0x69, 0x12, 0x30, 0xdb, 0x53, 0xf4, 0x83, 0x36, 0xae, 0x60, 0x3a, 0x96, 0x91, 0xc6,
	0x07, 0xd9, 0x67, 0xbb, 0xfd, 0xbe, 0xe0, 0x0f, 0x32, 0xf7, 0x41, 0xdd, 0xdf, 0xca, 0xb0, 0xb5,
	0xf4, 0xb9, 0x45, 0x3e, 0x82, 0x35, 0x5f, 0x26, 0x91, 0x51, 0xb7, 0xe9, 0x19, 0xef, 0x55, 0x86,
	0xc3, 0x21, 0xcd, 0x31, 0xf2, 0x1c, 0x56, 0x15, 0x4e, 0x2d, 0x87, 0x52, 0x42, 0xae, 0x0e, 0x87,
	0xc3, 0x9d, 0xe1, 0x90, 0x66, 0x28, 0x79, 0x0c, 0x2b, 0xbe, 0x9d, 0x6d, 0x73, 0x1e, 0x3a, 0x99,
	0xb4, 0xa1, 0x72, 0x27, 0xe2, 0x02, 0xf1, 0xac, 0x48, 0x9e, 0x40, 0x35, 0x44, 0xa3, 0x64, 0xfa,
	0x50, 0x4b, 0x53, 0xa5, 0x08, 0xd9, 0x81, 0x56, 0xc0, 0x8c, 0x17, 0xc8, 0x68, 0x6a, 0x07, 0x92,
	0xb6, 0x4f, 0x9a, 0xd5, 0xe2, 0x19, 0x34, 0x02, 0x66, 0xbe, 0x95, 0xd1, 0xf4, 0x34, 0x55, 0x92,
	0x16, 0x54, 0x02, 0x66, 0xdc, 0x33, 0xac, 0x44, 0xed, 0xa7, 0x43, 0x64, 0xe4, 0xc6, 0xac, 0x45,
	0x64, 0x44, 0x7e, 0x06, 0x2b, 0x8e, 0x9f, 0x35, 0xc7, 0xcf, 0x97, 0x0f, 0xf0, 0xf3, 0x18, 0xe5,
	0xe0, 0x5b, 0xe9, 0xbb, 0xf3, 0x71, 0x04, 0x75, 0x4e, 0xbd, 0x3f, 0x95, 0x60, 0x6b, 0xe9, 0x94,
	0x26, 0x3f, 0x81, 0xad, 0xc5, 0x99, 0x99, 0x4f, 0x78, 0x5b, 0xc1, 0x32, 0x6d, 0xc7, 0xc5, 0x49,
	0x99, 0x4f, 0xf3, 0x5f, 0xfc, 0x97, 0x89, 0x5b, 0x76, 0xbe, 0x0f, 0x4f, 0xdb, 0xde, 0xef, 0xe1,
	0xf1, 0xf2, 0xc7, 0x22, 0xd9, 0x83, 0x6d, 0xa1, 0x0b, 0x41, 0x8d, 0xf4, 0x26, 0xe8, 0x89, 0x69,
	0x24, 0x55, 0xce, 0x64, 0xfa, 0x58, 0xe8, 0x59, 0xc8, 0xb7, 0x72, 0x1f, 0xc7, 0xa9, 0x96, 0xbc,
	0x84, 0xa6, 0x7d, 0x4c, 0xdf, 0xc9, 0x08, 0xf3, 0x46, 0x9f, 0xfe, 0xf1, 0x68, 0xe4, 0x70, 0xda,
	0xe9, 0x7b, 0x5f, 0xbb, 0xf4, 0x4b, 0x1e, 0x14, 0xe4, 0x29, 0xd4, 0x18, 0xd7, 0x81, 0x34, 0x79,
	0xa3, 0xa8, 0xd2, 0xf5, 0x14, 0x18, 0xf3, 0xde, 0xef, 0xa0, 0x79, 0xef, 0x46, 0x92, 0xcf, 0xa0,
	0xc9, 0x43, 0xe6, 0xa5, 0x0c, 0xf2, 0x7c, 0xc9, 0x31, 0xf3, 0xaa, 0xf3, 0x90, 0x51, 0x87, 0x1e,
	0x48, 0x8e, 0xe4, 0x53, 0x68, 0x5c, 0xdc, 0xc6, 0xa8, 0x02, 0xe9, 0xb3, 0xc0, 0xcb, 0x57, 0xb6,
	0x49, 0xeb, 0x73, 0xf4, 0x0c, 0x4d, 0xef, 0x18, 0x9e, 0xfe, 0x87, 0xe7, 0x37, 0xe9, 0x43, 0x4b,
	0x63, 0x10, 0xa0, 0xf2, 0x42, 0x0c, 0x27, 0xf3, 0x6e, 0x56, 0xa5, 0x8d, 0x14, 0x7f, 0xed, 0xe0,
	0x31, 0xdf, 0xdf, 0x82, 0x47, 0xbe, 0x0c, 0x07, 0xd9, 0x5d, 0x1f, 0x64, 0x7f, 0x41, 0xff, 0x1d,
	0x00, 0x00, 0xff, 0xff, 0x6a, 0xe6, 0x46, 0xd9, 0xd9, 0x0e, 0x00, 0x00,
}
